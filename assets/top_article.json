{
    "data": [
        {
            "apkLink": "",
            "audit": 1,
            "author": "扔物线",
            "canEdit": false,
            "chapterId": 249,
            "chapterName": "干货资源",
            "collect": true,
            "courseId": 13,
            "desc": "",
            "descMd": "",
            "envelopePic": "",
            "fresh": true,
            "id": 12554,
            "link": "https://www.bilibili.com/video/BV1b54y1U71P/",
            "niceDate": "刚刚",
            "niceShareDate": "2020-03-23 16:36",
            "origin": "",
            "prefix": "",
            "projectLink": "",
            "publishTime": 1604073600000,
            "realSuperChapterId": 248,
            "selfVisible": 0,
            "shareDate": 1584952597000,
            "shareUser": "",
            "superChapterId": 249,
            "superChapterName": "干货资源",
            "tags": [],
            "title": "从月薪 2000 到月入 20 万，我这一路上的可复制与不可复制",
            "type": 1,
            "userId": -1,
            "visible": 1,
            "zan": 0
        },
        {
            "apkLink": "",
            "audit": 1,
            "author": "享学",
            "canEdit": false,
            "chapterId": 249,
            "chapterName": "干货资源",
            "collect": false,
            "courseId": 13,
            "desc": "",
            "descMd": "",
            "envelopePic": "",
            "fresh": true,
            "id": 14624,
            "link": "https://mp.weixin.qq.com/s/-hXN9XfJqNY5XQpM8Sfujw",
            "niceDate": "刚刚",
            "niceShareDate": "2020-08-05 00:14",
            "origin": "",
            "prefix": "",
            "projectLink": "",
            "publishTime": 1601395200000,
            "realSuperChapterId": 248,
            "selfVisible": 0,
            "shareDate": 1596557691000,
            "shareUser": "",
            "superChapterId": 249,
            "superChapterName": "干货资源",
            "tags": [],
            "title": "【助力面试季】倒计时三天！阿里P8大牛爆肝126小时编成的508页Android开发相关源码解析PDF，限时免费下载！",
            "type": 1,
            "userId": -1,
            "visible": 1,
            "zan": 0
        },
        {
            "apkLink": "",
            "audit": 1,
            "author": "xiaoyang",
            "canEdit": false,
            "chapterId": 440,
            "chapterName": "官方",
            "collect": false,
            "courseId": 13,
            "desc": "<p>上次我们问了：</p>\r\n<p><a href=\"https://wanandroid.com/wenda/show/14941\">每日一问 | Java 泛型与接口碰撞出的火花！</a></p>\r\n<p>不少同学认识到了，<strong>「桥接方法」解决了实现类与接口参数类型不匹配的问题。</strong></p>\r\n<p>那么我们再来看一个例子：</p>\r\n<pre><code>interface TestInter&lt;T&gt; {\r\n\r\n    T getName(String name);\r\n\r\n}\r\n</code></pre><p>实现类：</p>\r\n<pre><code>class TestImpl implements TestInter&lt;String&gt; {\r\n    @Override\r\n    public String getName(String name) {\r\n        return null;\r\n    }\r\n}\r\n</code></pre><p>这次猜我的关注点在哪？</p>\r\n<p>我们反编译一下TestImpl：</p>\r\n<pre><code>public java.lang.String getName(java.lang.String);\r\n  descriptor: (Ljava/lang/String;)Ljava/lang/String;\r\n  flags: ACC_PUBLIC\r\n\r\n\r\npublic java.lang.Object getName(java.lang.String);\r\n  descriptor: (Ljava/lang/String;)Ljava/lang/Object;\r\n  flags: ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\r\n</code></pre><p>又看到了ACC_BRIDGE，ACC_SYNTHETIC，已知知识。</p>\r\n<p>可以看到生成的两个方法，我们转成Java的展现形式：</p>\r\n<ol>\r\n<li>String getName(String str)</li>\r\n<li>Object getName(String str);</li>\r\n</ol>\r\n<p>有没有觉得奇怪？</p>\r\n<p>我贴张图，你就能看明白了：</p>\r\n<p><img src=\"https://wanandroid.com/blogimgs/9d06cc96-4343-4e9c-83f0-a448a6e3bbc1.png\" alt></p>\r\n<p>这两个方法的方法名，参数均相同，只有返回值不同，在我们Java平时编写中是不允许的。</p>\r\n<p>问题来了：</p>\r\n<ol>\r\n<li>为何在这个场景下，允许「一个类中有方法名，参数均相同，只有返回值不同」两个方法？</li>\r\n<li>既然class文件有两个getName，那么我们调用getName时，是如何确定调用的哪个方法呢？</li>\r\n</ol>",
            "descMd": "",
            "envelopePic": "",
            "fresh": false,
            "id": 14990,
            "link": "https://wanandroid.com/wenda/show/14990",
            "niceDate": "2020-08-26 21:11",
            "niceShareDate": "2020-08-26 21:08",
            "origin": "",
            "prefix": "",
            "projectLink": "",
            "publishTime": 1598447518000,
            "realSuperChapterId": 439,
            "selfVisible": 0,
            "shareDate": 1598447321000,
            "shareUser": "",
            "superChapterId": 440,
            "superChapterName": "问答",
            "tags": [
                {
                    "name": "本站发布",
                    "url": "/article/list/0?cid=440"
                },
                {
                    "name": "问答",
                    "url": "/wenda"
                }
            ],
            "title": "每日一问 |  当JVM遇到桥接方法，暴露出了什么？",
            "type": 1,
            "userId": 2,
            "visible": 1,
            "zan": 6
        },
        {
            "apkLink": "",
            "audit": 1,
            "author": "xiaoyang",
            "canEdit": false,
            "chapterId": 440,
            "chapterName": "官方",
            "collect": false,
            "courseId": 13,
            "desc": "<p>之前我们问过：</p>\r\n<p><a href=\"https://wanandroid.com/wenda/show/14738\">每日一问 Java编译器背后干了多少活 之 「内部类构造」</a></p>\r\n<p>提到了isSynthetic，<strong>注意今天的问题也是个类似的问题。</strong></p>\r\n<p>首先我们编写个接口：</p>\r\n<pre><code>interface Animal&lt;T&gt;{\r\n    void test(T t);\r\n}\r\n</code></pre><p>这个接口有个实现类：</p>\r\n<pre><code>class Dog implements Animal&lt;String&gt;{\r\n\r\n    @override\r\n    public void test(String str){\r\n    }\r\n}\r\n</code></pre><p>符合我们平时的写法对吧。</p>\r\n<p>但是你仔细推敲一下：</p>\r\n<p>接口 Animal 类的泛型，在编译成 class 后，会经历泛型擦除，会变成这样：</p>\r\n<pre><code>interface Animal{\r\n    void test(Object obj);\r\n}\r\n</code></pre><p>而实现类Dog里面有个方法<code>test(String str)</code>，注意<strong>这个方法和接口类的方法参数并不一致</strong>。</p>\r\n<p>那么也就是说，<strong>并没有实现接口中的方法。</strong></p>\r\n<p>但是，接口的方法，实现类是必须实现的。</p>\r\n<p>问题来了：</p>\r\n<ul>\r\n<li>为何不报错呢？</li>\r\n<li>除了这个场景，编译期间还有哪里有类似的处理方式么？(可不回答)</li>\r\n</ul>",
            "descMd": "",
            "envelopePic": "",
            "fresh": false,
            "id": 14941,
            "link": "https://wanandroid.com/wenda/show/14941",
            "niceDate": "2020-08-23 23:53",
            "niceShareDate": "2020-08-23 23:53",
            "origin": "",
            "prefix": "",
            "projectLink": "",
            "publishTime": 1598198034000,
            "realSuperChapterId": 439,
            "selfVisible": 0,
            "shareDate": 1598198007000,
            "shareUser": "",
            "superChapterId": 440,
            "superChapterName": "问答",
            "tags": [
                {
                    "name": "本站发布",
                    "url": "/article/list/0?cid=440"
                },
                {
                    "name": "问答",
                    "url": "/wenda"
                }
            ],
            "title": "每日一问  | Java 泛型与接口碰撞出的火花！",
            "type": 1,
            "userId": 2,
            "visible": 1,
            "zan": 8
        }
    ],
    "errorCode": 0,
    "errorMsg": ""
}